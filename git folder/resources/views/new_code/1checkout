<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title data-key="pageTitle">Product Catalog & Checkout</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <style>
        /* Custom styles for fonts and animations */
        @import url('https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap');
        @import url('https://fonts.googleapis.com/css2?family=Noto+Sans+Arabic:wght@400;700&display=swap'); /* Arabic font */


        body {
            font-family: 'Inter', sans-serif;
            background-color: #f3f4f6; /* Light gray background */
        }

        /* Subtle fade-in animation for sections */
        .fade-in {
            animation: fadeIn 0.8s ease-out forwards;
            opacity: 0;
        }

        @keyframes fadeIn {
            from {
                opacity: 0;
                transform: translateY(10px);
            }
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }

        /* Delay for sequential fade-in */
        .delay-100 { animation-delay: 0.1s; }
        .delay-200 { animation-delay: 0.2s; }
        .delay-300 { animation-delay: 0.3s; }
        .delay-400 { animation-delay: 0.4s; }
        .delay-500 { animation-delay: 0.5s; }

        /* Animation for total amount change */
        .total-highlight {
            animation: totalPulse 0.5s ease-out;
        }

        @keyframes totalPulse {
            0% { transform: scale(1); color: inherit; }
            50% { transform: scale(1.05); color: #6D28D9; } /* Purple highlight */
            100% { transform: scale(1); color: inherit; }
        }

        /* Hide default number input arrows */
        /* Chrome, Safari, Edge, Opera */
        input::-webkit-outer-spin-button,
        input::-webkit-inner-spin-button {
            -webkit-appearance: none;
            margin: 0;
        }
        /* Firefox */
        input[type=number] {
            -moz-appearance: textfield;
        }

        /* RTL specific styles */
        body.rtl {
            direction: rtl;
            font-family: 'Noto Sans Arabic', sans-serif; /* Apply Arabic font */
        }

        body.rtl .text-right-on-rtl {
            text-align: right;
        }

        body.rtl .text-left-on-rtl {
            text-align: left;
        }

        /* Adjustments for buttons and quantities in RTL */
        /* Apply flex-direction: row-reverse to quantity control containers in RTL */
        body.rtl .flex-row-reverse-on-rtl {
            flex-direction: row-reverse;
        }

        /* The space-x-2 behavior in RTL with flex-direction: row-reverse */
        /* space-x-2 adds margin-left. When flex-direction is row-reverse, */
        /* margin-left on elements will appear on their 'right' in the visual flow. */
        /* This is the desired behavior for spacing items from right-to-left in RTL. */
        body.rtl .space-x-2 > *:not(:last-child) {
            /* No explicit override needed here, as default margin-left will work as margin-right visually */
            /* If margin-right was desired, it would be: margin-left: 0 !important; margin-right: 0.5rem; */
        }


        body.rtl .sm\:text-left-on-rtl {
            text-align: right;
        }

        body.rtl .sm\:text-right-on-rtl {
            text-align: left;
        }
    </style>
</head>
<body class="p-4 sm:p-6 md:p-8 bg-gradient-to-br from-indigo-50 to-purple-50 min-h-screen flex flex-col items-center justify-center">

    <div class="max-w-4xl w-full bg-white rounded-xl shadow-2xl overflow-hidden flex flex-col transform transition-all duration-300 hover:scale-[1.005] mx-auto">

        <div class="absolute top-4 right-4 z-10 flex space-x-2 fade-in delay-0">
            <button id="lang-en" class="px-4 py-2 bg-purple-500 text-white rounded-lg shadow-md hover:bg-purple-600 focus:outline-none focus:ring-2 focus:ring-purple-400 focus:ring-opacity-75 transition duration-200">
                EN
            </button>
            <button id="lang-ar" class="px-4 py-2 bg-gray-200 text-gray-700 rounded-lg shadow-md hover:bg-gray-300 focus:outline-none focus:ring-2 focus:ring-gray-400 focus:ring-opacity-75 transition duration-200">
                AR
            </button>
        </div>

        <div class="p-6 sm:p-8 bg-gradient-to-r from-purple-600 to-indigo-700 text-white text-center rounded-t-xl fade-in">
            <h1 class="text-3xl sm:text-4xl font-extrabold mb-2" data-key="pageHeaderTitle">Our Fresh Products</h1>
            <p class="text-indigo-200 text-lg" data-key="pageHeaderSubtitle">Select your desired quantity and proceed to checkout.</p>
        </div>

        <div class="p-6 sm:p-8 flex-grow overflow-y-auto" style="max-height: calc(100vh - 250px);">
            <ul class="space-y-4">
                <li class="flex flex-col sm:flex-row justify-between items-center bg-gray-50 p-4 rounded-lg shadow-sm hover:shadow-md transition-shadow duration-200 fade-in delay-100">
                    <div class="flex-grow mb-2 sm:mb-0 sm:mr-4 text-center sm:text-left sm:text-left-on-rtl">
                        <span class="text-lg font-medium text-gray-700" data-key="bloodyOrange">Bloody orange</span>
                        <p class="text-sm text-gray-500" data-key="bloodyOrangePrice">20.00 SAR/kg</p>
                    </div>
                    <div class="flex items-center space-x-2 flex-row-reverse-on-rtl"> <!-- Added flex-row-reverse-on-rtl -->
                        <span class="text-gray-700 font-medium" data-key="unitKg">kg</span> <!-- Removed ml-2 -->
                        <button class="quantity-btn p-2 bg-purple-200 text-purple-800 rounded-md hover:bg-purple-300 focus:outline-none focus:ring-2 focus:ring-purple-400 focus:ring-opacity-75 transition duration-200 w-8 h-8 flex items-center justify-center text-xl font-bold" data-action="increment" data-target="qty-bloody-orange">+</button>
                        <label for="qty-bloody-orange" class="sr-only">Quantity for Bloody orange</label>
                        <input type="number" id="qty-bloody-orange" data-product-id="bloody-orange" data-price="20.00" value="0" min="0" class="w-20 p-2 border border-gray-300 rounded-md text-center focus:ring-2 focus:ring-purple-400 focus:border-transparent transition-all duration-200">
                        <button class="quantity-btn p-2 bg-purple-200 text-purple-800 rounded-md hover:bg-purple-300 focus:outline-none focus:ring-2 focus:ring-purple-400 focus:ring-opacity-75 transition duration-200 w-8 h-8 flex items-center justify-center text-xl font-bold" data-action="decrement" data-target="qty-bloody-orange">-</button>
                    </div>
                </li>

                <li class="flex flex-col sm:flex-row justify-between items-center bg-gray-50 p-4 rounded-lg shadow-sm hover:shadow-md transition-shadow duration-200 fade-in delay-200">
                    <div class="flex-grow mb-2 sm:mb-0 sm:mr-4 text-center sm:text-left sm:text-left-on-rtl">
                        <span class="text-lg font-medium text-gray-700" data-key="liverPeach">Liver peach</span>
                        <p class="text-sm text-gray-500" data-key="liverPeachPrice">16.00 SAR/kg</p>
                    </div>
                    <div class="flex items-center space-x-2 flex-row-reverse-on-rtl">
                        <span class="text-gray-700 font-medium" data-key="unitKg">kg</span>
                        <button class="quantity-btn p-2 bg-purple-200 text-purple-800 rounded-md hover:bg-purple-300 focus:outline-none focus:ring-2 focus:ring-purple-400 focus:ring-opacity-75 transition duration-200 w-8 h-8 flex items-center justify-center text-xl font-bold" data-action="increment" data-target="qty-liver-peach">+</button>
                        <label for="qty-liver-peach" class="sr-only">Quantity for Liver peach</label>
                        <input type="number" id="qty-liver-peach" data-product-id="liver-peach" data-price="16.00" value="0" min="0" class="w-20 p-2 border border-gray-300 rounded-md text-center focus:ring-2 focus:ring-purple-400 focus:border-transparent transition-all duration-200">
                        <button class="quantity-btn p-2 bg-purple-200 text-purple-800 rounded-md hover:bg-purple-300 focus:outline-none focus:ring-2 focus:ring-purple-400 focus:ring-opacity-75 transition duration-200 w-8 h-8 flex items-center justify-center text-xl font-bold" data-action="decrement" data-target="qty-liver-peach">-</button>
                    </div>
                </li>

                <li class="flex flex-col sm:flex-row justify-between items-center bg-gray-50 p-4 rounded-lg shadow-sm hover:shadow-md transition-shadow duration-200 fade-in delay-300">
                    <div class="flex-grow mb-2 sm:mb-0 sm:mr-4 text-center sm:text-left sm:text-left-on-rtl">
                        <span class="text-lg font-medium text-gray-700" data-key="apples">Apples</span>
                        <p class="text-sm text-gray-500" data-key="applesPrice">16.00 SAR/kg</p>
                    </div>
                    <div class="flex items-center space-x-2 flex-row-reverse-on-rtl">
                        <span class="text-gray-700 font-medium" data-key="unitKg">kg</span>
                        <button class="quantity-btn p-2 bg-purple-200 text-purple-800 rounded-md hover:bg-purple-300 focus:outline-none focus:ring-2 focus:ring-purple-400 focus:ring-opacity-75 transition duration-200 w-8 h-8 flex items-center justify-center text-xl font-bold" data-action="increment" data-target="qty-apples">+</button>
                        <label for="qty-apples" class="sr-only">Quantity for Apples</label>
                        <input type="number" id="qty-apples" data-product-id="apples" data-price="16.00" value="0" min="0" class="w-20 p-2 border border-gray-300 rounded-md text-center focus:ring-2 focus:ring-purple-400 focus:border-transparent transition-all duration-200">
                        <button class="quantity-btn p-2 bg-purple-200 text-purple-800 rounded-md hover:bg-purple-300 focus:outline-none focus:ring-2 focus:ring-purple-400 focus:ring-opacity-75 transition duration-200 w-8 h-8 flex items-center justify-center text-xl font-bold" data-action="decrement" data-target="qty-apples">-</button>
                    </div>
                </li>

                <li class="flex flex-col sm:flex-row justify-between items-center bg-gray-50 p-4 rounded-lg shadow-sm hover:shadow-md transition-shadow duration-200 fade-in delay-400">
                    <div class="flex-grow mb-2 sm:mb-0 sm:mr-4 text-center sm:text-left sm:text-left-on-rtl">
                        <span class="text-lg font-medium text-gray-700" data-key="solarPeach">Solar peach</span>
                        <p class="text-sm text-gray-500" data-key="solarPeachPrice">20.00 SAR/kg</p>
                    </div>
                    <div class="flex items-center space-x-2 flex-row-reverse-on-rtl">
                        <span class="text-gray-700 font-medium" data-key="unitKg">kg</span>
                        <button class="quantity-btn p-2 bg-purple-200 text-purple-800 rounded-md hover:bg-purple-300 focus:outline-none focus:ring-2 focus:ring-purple-400 focus:ring-opacity-75 transition duration-200 w-8 h-8 flex items-center justify-center text-xl font-bold" data-action="increment" data-target="qty-solar-peach">+</button>
                        <label for="qty-solar-peach" class="sr-only">Quantity for Solar peach</label>
                        <input type="number" id="qty-solar-peach" data-product-id="solar-peach" data-price="20.00" value="0" min="0" class="w-20 p-2 border border-gray-300 rounded-md text-center focus:ring-2 focus:ring-purple-400 focus:border-transparent transition-all duration-200">
                        <button class="quantity-btn p-2 bg-purple-200 text-purple-800 rounded-md hover:bg-purple-300 focus:outline-none focus:ring-2 focus:ring-purple-400 focus:ring-opacity-75 transition duration-200 w-8 h-8 flex items-center justify-center text-xl font-bold" data-action="decrement" data-target="qty-solar-peach">-</button>
                    </div>
                </li>

                <li class="flex flex-col sm:flex-row justify-between items-center bg-gray-50 p-4 rounded-lg shadow-sm hover:shadow-md transition-shadow duration-200 fade-in delay-500">
                    <div class="flex-grow mb-2 sm:mb-0 sm:mr-4 text-center sm:text-left sm:text-left-on-rtl">
                        <span class="text-lg font-medium text-gray-700" data-key="watermelon">Watermelon</span>
                        <p class="text-sm text-gray-500" data-key="watermelonPrice">12.00 SAR/kg</p>
                    </div>
                    <div class="flex items-center space-x-2 flex-row-reverse-on-rtl">
                        <span class="text-gray-700 font-medium" data-key="unitKg">kg</span>
                        <button class="quantity-btn p-2 bg-purple-200 text-purple-800 rounded-md hover:bg-purple-300 focus:outline-none focus:ring-2 focus:ring-purple-400 focus:ring-opacity-75 transition duration-200 w-8 h-8 flex items-center justify-center text-xl font-bold" data-action="increment" data-target="qty-watermelon">+</button>
                        <label for="qty-watermelon" class="sr-only">Quantity for Watermelon</label>
                        <input type="number" id="qty-watermelon" data-product-id="watermelon" data-price="12.00" value="0" min="0" class="w-20 p-2 border border-gray-300 rounded-md text-center focus:ring-2 focus:ring-purple-400 focus:border-transparent transition-all duration-200">
                        <button class="quantity-btn p-2 bg-purple-200 text-purple-800 rounded-md hover:bg-purple-300 focus:outline-none focus:ring-2 focus:ring-purple-400 focus:ring-opacity-75 transition duration-200 w-8 h-8 flex items-center justify-center text-xl font-bold" data-action="decrement" data-target="qty-watermelon">-</button>
                    </div>
                </li>

                <li class="flex flex-col sm:flex-row justify-between items-center bg-gray-50 p-4 rounded-lg shadow-sm hover:shadow-md transition-shadow duration-200 fade-in delay-400">
                    <div class="flex-grow mb-2 sm:mb-0 sm:mr-4 text-center sm:text-left sm:text-left-on-rtl">
                        <span class="text-lg font-medium text-gray-700" data-key="fantasyQueenFruit">Fantasy queen fruit</span>
                        <p class="text-sm text-gray-500" data-key="fantasyQueenFruitPrice">16.00 SAR/kg</p>
                    </div>
                    <div class="flex items-center space-x-2 flex-row-reverse-on-rtl">
                        <span class="text-gray-700 font-medium" data-key="unitKg">kg</span>
                        <button class="quantity-btn p-2 bg-purple-200 text-purple-800 rounded-md hover:bg-purple-300 focus:outline-none focus:ring-2 focus:ring-purple-400 focus:ring-opacity-75 transition duration-200 w-8 h-8 flex items-center justify-center text-xl font-bold" data-action="increment" data-target="qty-fantasy-queen-fruit">+</button>
                        <label for="qty-fantasy-queen-fruit" class="sr-only">Quantity for Fantasy queen fruit</label>
                        <input type="number" id="qty-fantasy-queen-fruit" data-product-id="fantasy-queen-fruit" data-price="16.00" value="0" min="0" class="w-20 p-2 border border-gray-300 rounded-md text-center focus:ring-2 focus:ring-purple-400 focus:border-transparent transition-all duration-200">
                        <button class="quantity-btn p-2 bg-purple-200 text-purple-800 rounded-md hover:bg-purple-300 focus:outline-none focus:ring-2 focus:ring-purple-400 focus:ring-opacity-75 transition duration-200 w-8 h-8 flex items-center justify-center text-xl font-bold" data-action="decrement" data-target="qty-fantasy-queen-fruit">-</button>
                    </div>
                </li>

                <li class="flex flex-col sm:flex-row justify-between items-center bg-gray-50 p-4 rounded-lg shadow-sm hover:shadow-md transition-shadow duration-200 fade-in delay-500">
                    <div class="flex-grow mb-2 sm:mb-0 sm:mr-4 text-center sm:text-left sm:text-left-on-rtl">
                        <span class="text-lg font-medium text-gray-700" data-key="leanPeach">Lean peach</span>
                        <p class="text-sm text-gray-500" data-key="leanPeachPrice">16.00 SAR/kg</p>
                    </div>
                    <div class="flex items-center space-x-2 flex-row-reverse-on-rtl">
                        <span class="text-gray-700 font-medium" data-key="unitKg">kg</span>
                        <button class="quantity-btn p-2 bg-purple-200 text-purple-800 rounded-md hover:bg-purple-300 focus:outline-none focus:ring-2 focus:ring-purple-400 focus:ring-opacity-75 transition duration-200 w-8 h-8 flex items-center justify-center text-xl font-bold" data-action="increment" data-target="qty-lean-peach">+</button>
                        <label for="qty-lean-peach" class="sr-only">Quantity for Lean peach</label>
                        <input type="number" id="qty-lean-peach" data-product-id="lean-peach" data-price="16.00" value="0" min="0" class="w-20 p-2 border border-gray-300 rounded-md text-center focus:ring-2 focus:ring-purple-400 focus:border-transparent transition-all duration-200">
                        <button class="quantity-btn p-2 bg-purple-200 text-purple-800 rounded-md hover:bg-purple-300 focus:outline-none focus:ring-2 focus:ring-purple-400 focus:ring-opacity-75 transition duration-200 w-8 h-8 flex items-center justify-center text-xl font-bold" data-action="decrement" data-target="qty-lean-peach">-</button>
                    </div>
                </li>
            </ul>
        </div>

        <div class="p-6 sm:p-8 bg-gray-100 flex flex-col sm:flex-row items-center justify-between rounded-b-xl border-t border-gray-200 fade-in delay-500">
            <div class="text-2xl sm:text-3xl font-bold text-gray-800 mb-4 sm:mb-0">
                <span data-key="totalLabel">Total:</span> <span id="total-amount" class="text-purple-700">0.00 SAR</span>
            </div>
            <button id="checkout-btn" class="w-full sm:w-auto px-8 py-3 bg-purple-600 text-white font-bold rounded-lg shadow-lg hover:bg-purple-700 focus:outline-none focus:ring-2 focus:ring-purple-400 focus:ring-opacity-75 transition duration-300 ease-in-out transform hover:scale-105" data-key="checkoutButton">
                Proceed to Checkout
            </button>
        </div>

    </div>

    <script>
        // Translations object
        const translations = {
            en: {
                pageTitle: "Product Catalog & Checkout",
                pageHeaderTitle: "Our Fresh Products",
                pageHeaderSubtitle: "Select your desired quantity and proceed to checkout.",
                bloodyOrange: "Bloody orange",
                bloodyOrangePrice: "20.00 SAR/kg",
                liverPeach: "Liver peach",
                liverPeachPrice: "16.00 SAR/kg",
                apples: "Apples",
                applesPrice: "16.00 SAR/kg",
                solarPeach: "Solar peach",
                solarPeachPrice: "20.00 SAR/kg",
                watermelon: "Watermelon",
                watermelonPrice: "12.00 SAR/kg",
                fantasyQueenFruit: "Fantasy queen fruit",
                fantasyQueenFruitPrice: "16.00 SAR/kg",
                leanPeach: "Lean peach",
                leanPeachPrice: "16.00 SAR/kg",
                unitKg: "kg",
                totalLabel: "Total:",
                checkoutButton: "Proceed to Checkout"
            },
            ar: {
                pageTitle: "كتالوج المنتجات والدفع",
                pageHeaderTitle: "منتجاتنا الطازجة",
                pageHeaderSubtitle: "اختر الكمية المطلوبة وتابع الدفع.",
                bloodyOrange: "برتقال دموي",
                bloodyOrangePrice: "20.00 ريال سعودي/كجم",
                liverPeach: "خوخ الكبد",
                liverPeachPrice: "16.00 ريال سعودي/كجم",
                apples: "تفاح",
                applesPrice: "16.00 ريال سعودي/كجم",
                solarPeach: "خوخ الشمس",
                solarPeachPrice: "20.00 ريال سعودي/كجم",
                watermelon: "بطيخ",
                watermelonPrice: "12.00 ريال سعودي/كجم",
                fantasyQueenFruit: "فاكهة ملكة الخيال",
                fantasyQueenFruitPrice: "16.00 ريال سعودي/كجم",
                leanPeach: "خوخ نحيل",
                leanPeachPrice: "16.00 ريال سعودي/كجم",
                unitKg: "kg",
                totalLabel: "الإجمالي:",
                checkoutButton: "المتابعة إلى الدفع"
            }
        };

        // Function to update content based on language
        function updateContent(lang) {
            const currentTranslations = translations[lang];
            for (const key in currentTranslations) {
                const element = document.querySelector(`[data-key="${key}"]`);
                if (element) {
                    element.textContent = currentTranslations[key];
                }
            }

            const body = document.body;
            const html = document.documentElement; // Get the HTML element for dir attribute

            if (lang === 'ar') {
                body.classList.add('rtl');
                html.setAttribute('dir', 'rtl'); // Set dir attribute for proper RTL handling
            } else {
                body.classList.remove('rtl');
                html.removeAttribute('dir'); // Remove dir attribute
            }

            // Update active language button styling
            document.getElementById('lang-en').classList.remove('bg-purple-500', 'text-white');
            document.getElementById('lang-en').classList.add('bg-gray-200', 'text-gray-700');
            document.getElementById('lang-ar').classList.remove('bg-purple-500', 'text-white');
            document.getElementById('lang-ar').classList.add('bg-gray-200', 'text-gray-700');

            if (lang === 'en') {
                document.getElementById('lang-en').classList.remove('bg-gray-200', 'text-gray-700');
                document.getElementById('lang-en').classList.add('bg-purple-500', 'text-white');
            } else if (lang === 'ar') {
                document.getElementById('lang-ar').classList.remove('bg-gray-200', 'text-gray-700');
                document.getElementById('lang-ar').classList.add('bg-purple-500', 'text-white');
            }

            // Re-calculate total in case prices/units changed (though in this case they are fixed)
            updateTotal();
        }

        document.addEventListener('DOMContentLoaded', () => {
            const quantityInputs = document.querySelectorAll('input[type="number"][data-price]');
            const totalAmountSpan = document.getElementById('total-amount');
            const quantityButtons = document.querySelectorAll('.quantity-btn');
            const checkoutButton = document.getElementById('checkout-btn');

            // Function to calculate and update the total
            function updateTotal() {
                let total = 0;
                quantityInputs.forEach(input => {
                    const price = parseFloat(input.dataset.price);
                    const quantity = parseInt(input.value);
                    if (!isNaN(price) && !isNaN(quantity) && quantity >= 0) {
                        total += price * quantity;
                    }
                });

                // Apply highlight animation
                totalAmountSpan.classList.remove('total-highlight');
                // Trigger reflow to restart animation
                void totalAmountSpan.offsetWidth; // This line forces a reflow
                totalAmountSpan.classList.add('total-highlight');

                // Get current currency based on language
                const currentLang = document.documentElement.getAttribute('dir') === 'rtl' ? 'ar' : 'en';
                const currency = currentLang === 'ar' ? 'ريال سعودي' : 'SAR';

                totalAmountSpan.textContent = total.toFixed(2) + " " + currency;
            }

            // Add event listeners to quantity buttons
            quantityButtons.forEach(button => {
                button.addEventListener('click', (event) => {
                    const action = event.target.dataset.action;
                    const targetId = event.target.dataset.target;
                    const input = document.getElementById(targetId);
                    let currentValue = parseInt(input.value);

                    if (action === 'increment') {
                        input.value = currentValue + 1;
                    } else if (action === 'decrement') {
                        if (currentValue > 0) {
                            input.value = currentValue - 1;
                        }
                    }
                    updateTotal(); // Update total after quantity changes
                });
            });

            // Add event listener to each quantity input for direct input changes
            quantityInputs.forEach(input => {
                input.addEventListener('input', updateTotal);
                input.addEventListener('change', updateTotal); // For when focus leaves input
            });

            // --- Checkout Button Logic for Laravel Backend ---
            checkoutButton.addEventListener('click', async () => {
                const selectedItems = [];
                quantityInputs.forEach(input => {
                    const quantity = parseInt(input.value);
                    if (quantity > 0) {
                        const productId = input.dataset.productId; // Use data-product-id
                        const pricePerKg = parseFloat(input.dataset.price);

                        // Find the product name based on its data-key
                        const productNameElement = input.closest('li').querySelector(`span[data-key="${productId.replace(/-/g, '')}"]`);
                        const productName = productNameElement ? productNameElement.textContent : productId; // Fallback to id if not found

                        selectedItems.push({
                            id: productId, // Important for backend to identify product
                            name: productName,
                            quantity: quantity,
                            price_per_kg: pricePerKg // Use snake_case for Laravel
                        });
                    }
                });

                if (selectedItems.length === 0) {
                    alert("Please select at least one item to proceed to checkout.");
                    return;
                }

                const currentLang = document.documentElement.getAttribute('dir') === 'rtl' ? 'ar' : 'en';

                try {
                    const response = await fetch('/checkout/process', { // Laravel route for processing checkout
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                            'X-CSRF-TOKEN': '{{ csrf_token() }}' // Laravel CSRF token for security
                        },
                        body: JSON.stringify({
                            items: selectedItems,
                            lang: currentLang
                        })
                    });

                    if (response.ok) {
                        const data = await response.json();
                        if (data.redirect_url) {
                            window.location.href = data.redirect_url; // Redirect to payment page
                        } else {
                            alert("Something went wrong with the redirect.");
                        }
                    } else {
                        const errorData = await response.json();
                        alert(`Checkout failed: ${errorData.message || 'Unknown error'}`);
                        console.error('Checkout error:', errorData);
                    }
                } catch (error) {
                    console.error('Network error or unexpected:', error);
                    alert("An error occurred. Please try again.");
                }
            });
            // --- End Checkout Button Logic ---


            // Event listeners for language buttons
            document.getElementById('lang-en').addEventListener('click', () => updateContent('en'));
            document.getElementById('lang-ar').addEventListener('click', () => updateContent('ar'));

            // Initial content load (default to English)
            updateContent('en');
        });
    </script>

</body>
</html>
